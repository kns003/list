from django import forms
import re
from django.contrib.auth.models import User
from todo.models import PRIORITY, STATE

password_regex = re.compile(r'^.*(?=.{4,}).*$')

class UserCreationForm(forms.Form):
    """
    A form that creates a user, with no privileges, from the given username and password.
    """
	username = forms.CharField(
        widget=forms.TextInput(
            attrs={'placeholder':'Username','class':'full-width','autocomplete':'off'}
        ),
        required=True,
    )
	
    password = forms.CharField(
        widget=forms.PasswordInput(
            attrs={'placeholder':'Password','autocomplete':'off'}
        ),
        required=True,
    )

	def clean_username(self):
		username = self.cleaned_data['username']
		try:
			User.objects.get(username = username)
		except User.DoesNotExist:
			return username.strip()
		raise forms.ValidationError("A user with this username already exists.")

    def clean_password(self):
        password = self.cleaned_data.get("password", "")
        if password != '':
            if not password_regex.match( password ):
                raise forms.ValidationError('Password must be at least 4 characters long.')
        return password.strip()

class TodoForm(froms.Form):
	name = forms.CharField(
		widget=forms.TextInput(
            attrs={'placeholder':'Name','class':'full-width','autocomplete':'off'}
        ),
        required=True,
    )
	description = forms.TextField(
		widget=forms.TextInput(
            attrs={'placeholder':'Description','class':'full-width','autocomplete':'off'}
        ),
        required=True,
    )
	priority = forms.ChoiceField(widget=forms.RadioSelect, choices=PRIORITY)
	
